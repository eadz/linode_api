#!/usr/bin/env ruby
#
#A Ruby library to perform low-level Linode API functions.
#
#Copyright (c) 2008 David S Bell <dave@geordish.org>
#
#Permission is hereby granted, free of charge, to any person
#obtaining a copy of this software and associated documentation
#files (the "Software"), to deal in the Software without
#restriction, including without limitation the rights to use,
#copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the
#Software is furnished to do so, subject to the following
#conditions:
#
#The above copyright notice and this permission notice shall be
#included in all copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
#OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
#HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
#OTHER DEALINGS IN THE SOFTWARE.
#
#A link to the library can be found here[http://geordish.org/linodeapi/linodeapi.tar.gz]
#
require "apicore"

class Api < ApiCore 
  
  #  Initizlize the Ruby Linode API
  #
  #  Parameters:
  #    APIKEY         - Unique key generated by Linode to access the commands
  #    DEBUG          - Set to true for debugging to be turned on
  #    BATCH          - This will be set to false, due to the methods included
  #                     with this library not being compatible with batching
  #
  #  Returns nothing


  def initialize(key, debug=false, batching=false)
    super
    @batching=false
  end

  #  Retrieve the domain id of a domain
  #
  #  Parameters:
  #    DOMAIN         - The domain name you want the id for
  #
  #  RETURNS:
  #    The id of the domain you requested

  def getDomainIdByName domain
    domainList.find do |dom| 
      return dom["DOMAINID"] if dom["DOMAIN"].downcase == domain.downcase
    end
  end
end
